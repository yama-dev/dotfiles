
# denite.
[[plugins]]
repo = 'Shougo/denite.nvim'

# Interface
[[plugins]]
repo = 'Shougo/vimfiler.vim'

[[plugins]]
repo = 'thinca/vim-qfreplace'

[[plugins]]
repo = 'vim-scripts/renamer.vim'

# Snippet
[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'yama-dev/neosnippet-frontend-snippets'

# deoplete
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  call deoplete#custom#option({
    \ 'auto_complete_delay': 200,
    \ 'smart_case': v:true,
    \ })
'''
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  "Tab補完の設定
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
    \ neosnippet#expandable_or_jumpable() ?
    \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
build = '''
  npm install -g tern
'''

[[plugins]]

# Syntax
[[plugins]]
repo = 'othree/yajs.vim'

# StatusLine
[[plugins]]
repo = 'vim-airline/vim-airline'

# HTML.
[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  let g:user_emmet_leader_key='<C-e>'
  let g:user_emmet_settings={"variables":{"lang":"ja"}}
'''

[[plugins]]
repo = 'alvan/vim-closetag'

# changed.
[[plugins]]
repo = 'leftouterjoin/changed'

# Git.
[[plugins]]
repo = 'tpope/vim-fugitive'

# toml.
[[plugins]]
repo = 'cespare/vim-toml'
hook_add = '''
  autocmd BufRead,BufNewFile,BufReadPre *.toml set filetype=toml
'''

# Format.
[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  nmap ga <Plug>(EasyAlign)
  xmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 't9md/vim-textmanip'
hook_add = '''
  xmap <M-d> <Plug>(textmanip-duplicate-down)
  nmap <M-d> <Plug>(textmanip-duplicate-down)
  xmap <M-D> <Plug>(textmanip-duplicate-up)
  nmap <M-D> <Plug>(textmanip-duplicate-up)

  xmap <C-j> <Plug>(textmanip-move-down)
  xmap <C-k> <Plug>(textmanip-move-up)
  xmap <C-h> <Plug>(textmanip-move-left)
  xmap <C-l> <Plug>(textmanip-move-right)

  " toggle insert/replace with <F10>
  nmap <F10> <Plug>(textmanip-toggle-mode)
  xmap <F10> <Plug>(textmanip-toggle-mode)

  " use allow key to force replace movement
  xmap  <Up>     <Plug>(textmanip-move-up-r)
  xmap  <Down>   <Plug>(textmanip-move-down-r)
  xmap  <Left>   <Plug>(textmanip-move-left-r)
  xmap  <Right>  <Plug>(textmanip-move-right-r)
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_faster = 1
  nmap <silent><Leader>i :<C-u>IndentLinesToggle<CR>
'''

# Util.
[[plugins]]
repo = 'terryma/vim-multiple-cursors'
hook_add = '''
  let g:multi_cursor_use_default_mapping=0
  let g:multi_cursor_next_key='<C-d>'
  let g:multi_cursor_prev_key='<C-p>'
  let g:multi_cursor_skip_key='<C-x>'
  let g:multi_cursor_quit_key='<Esc>'
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
 
# colorscheme.
[[plugins]]
repo = 'jacoborus/tender.vim'
hook_add = '''
"  colorscheme tender
'''

[[plugins]]
repo = 'trusktr/seti.vim'
hook_add = '''
"  colorscheme seti
'''

[[plugins]]
repo = 'vim-scripts/xoria256.vim'
hook_add = '''
"  colorscheme xoria256
'''

[[plugins]]
repo = 'zaki/zazen'
hook_add = '''
"  colorscheme zazen
'''

[[plugins]]
repo = 'Haron-Prime/Antares'
hook_add = '''
  colorscheme Antares
'''

